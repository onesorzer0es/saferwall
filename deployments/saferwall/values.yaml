#
# Default values for Saferwall malware sandbox.
# https://github.com/saferwall/saferwall
#

## Global project configuration
##
global:
  email: admin@mysaferwall.com
  backendDomainName: api.mysaferwall.com
  frontendDomainName: mysaferwall.com
  websiteDomainName: about.mysaferwall.com
  backendHostname: https://api.mysaferwall.com
  privateRegistryServer: false

########### MINIO ###########
minio:
  enabled: true

  # We choose distributed for HA. This can be set to standalone in dev env.
  mode: standalone
  # mode: distributed

  # Number of nodes (applicable only for MinIO distributed mode)
  # Should be a minimum value of 4.
  # replicas: 1

  service:
    type: ClusterIP
    port: 9000

  persistence:
    # Use persistent volume to store data
    enabled: true

    # Size of persistent volume claim
    size: 5Gi

  ## Configure resource requests and limits
  resources:
    requests:
      memory: 2Gi

  accessKey: "<accessKey>"
  secretKey: "<secretKey>"
  spacename: samples
  avatarspace: images

####### FILEBEAT #########
filebeat:
  enabled: false
  filebeatConfig:
    filebeat.yml: |-
      filebeat.autodiscover:
        providers:
          - type: kubernetes
            in_cluster: true
            templates:
              - condition:
                  or:
                    - equals:
                        kubernetes.container.name: backend
                    - equals:
                        kubernetes.container.name: consumer
                config:
                  - type: docker
                    containers.ids:
                      - "${data.kubernetes.container.id}"
                    json.add_error_key: true
                    processors:
                      - add_kubernetes_metadata: ~
      processors:
        - add_cloud_metadata: ~
        - add_docker_metadata: ~ 
      output.elasticsearch:
        host: '${NODE_NAME}'
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'

####### ELASTIC SEARCH #########
elasticsearch:
  enabled: false
  replicas: 1
  minimumMasterNodes: 1
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
  resources:
    requests:
      cpu: "500m"

####### KIBANA #########
kibana:
  enabled: false
  resources:
    requests:
      cpu: "500m"

###### KUBE PROMETHEUS STACK #########
kube-prometheus-stack:
  enabled: false
  grafana:
    serviceMonitor:
      # Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval: "5s"

####### COUCHBASE #########
couchbase-operator:
  enabled: true

  # Select what to install
  install:
    # install the couchbase operator
    couchbaseOperator: true
    # install the admission controller
    admissionController: true
    # install couchbase cluster
    couchbaseCluster: true
    # install sync gateway
    syncGateway: false

  # couchbaseOperator is the controller for couchbase cluster
  couchbaseOperator:
    # name of the couchbase operator
    name: "couchbase-operator"
    # image config
    image:
      repository: couchbase/operator
      tag: 2.1.0

  # admissionController is the controller for couchbase admission controller
  # name is derived from chart
  admissionController:
    name: "couchbase-admission-controller"
    image:
      repository: couchbase/admission-controller
      tag: 2.1.0

  # Default values for couchbase-cluster
  cluster:
    # name of the cluster. defaults to name of chart release
    name:
    # image is the base couchbase image and version of the couchbase cluster
    image: "couchbase/server:6.6.0"
    security:
      ## username of the cluster admin.
      # username: Administrator
      ## password of the cluster admin.
      ## auto-generated when empty
      # password:
      # adminSecret is name of secret to use instead of using
      # the default secret with username and password specified above
      adminSecret: "cb-admin-secret"
    backup:
      # managed determines whether Automated Backup is enabled
      managed: true
      # image used by the Operator to perform backup or restore
      image: couchbase/operator-backup:6.6.0-100
      # secret that holds the AWS region name, access key ID, and secret access key
      s3Secret:
    # Cluster wide settings for nodes and services
    cluster:
      # The amount of memory that should be allocated to the data service
      dataServiceMemoryQuota: 512Mi
      # The amount of memory that should be allocated to the index service
      indexServiceMemoryQuota: 512Mi
      # The amount of memory that should be allocated to the search service
      searchServiceMemoryQuota: 512Mi
      # The amount of memory that should be allocated to the eventing service
      eventingServiceMemoryQuota: 512Mi
      # The amount of memory that should be allocated to the analytics service
      analyticsServiceMemoryQuota: 1Gi
      # The index storage mode to use for secondary indexing
      indexStorageSetting: memory_optimized
      # Timeout that expires to trigger the auto failover.
      autoFailoverTimeout: 120s
      # The number of failover events we can tolerate
      autoFailoverMaxCount: 3
      # Whether to auto failover if disk issues are detected
      autoFailoverOnDataDiskIssues: true
      # How long to wait for transient errors before failing over a faulty disk
      autoFailoverOnDataDiskIssuesTimePeriod: 120s
      # configuration of global Couchbase auto-compaction settings.
      autoCompaction:
        # amount of fragmentation allowed in persistent database [2-100]
        databaseFragmentationThreshold:
          percent: 30
          size: 1Gi
        # amount of fragmentation allowed in persistent view files [2-100]
        viewFragmentationThreshold:
          percent: 30
          size: 1Gi
        # whether auto-compaction should be performed in parallel
        parallelCompaction: false
        # how frequently tombstones may be purged
        tombstonePurgeInterval: 72h
        # optional window when an auto-compaction may start (uncomment below)
        timeWindow: {}
        # start: 02:00
        # end: 06:00
        # abortCompactionOutsideWindow: true
    # cluster buckets
    buckets:
      # Managed defines whether buckets are managed by us or the clients.
      managed: true
    servers:
      # Name for the server configuration. It must be unique.
      default:
        # Size of the couchbase cluster.
        size: 1
        # The services to run on nodes
        services:
          - data
          - index
          - query
          - search
          - analytics
          - eventing
        # volume claims to use for persistent storage
        volumeMounts:
          default: couchbase
          data: couchbase
          index: couchbase
    # VolumeClaimTemplates define the desired characteristics of a volume
    # that can be requested and claimed by a pod.
    volumeClaimTemplates:
      - metadata:
          name: couchbase
        spec:
          storageClassName: standard
          resources:
            requests:
              storage: 10Gi

  # couchbase buckets to create
  # disable default bucket creation by setting
  buckets.default: null
  #
  # setting default to null throws warning https://github.com/helm/helm/issues/5184
  buckets:
    # A bucket to create by default
    files:
      # Name of the bucket
      name: files
      # The type of bucket to use
      type: couchbase
      # The amount of memory that should be allocated to the bucket
      memoryQuota: 128Mi
      # The number of bucket replicates
      replicas: 1
      # The priority when compared to other buckets
      ioPriority: high
      # The bucket eviction policy which determines behavior during expire and high mem usage
      evictionPolicy: fullEviction
      # The bucket's conflict resolution mechanism; which is to be used if a conflict occurs during Cross Data-Center Replication (XDCR). Sequence-based and timestamp-based mechanisms are supported.
      conflictResolution: seqno
      # The enable flush option denotes wether the data in the bucket can be flushed
      enableFlush: true
      # Enable Index replica specifies whether or not to enable view index replicas for this bucket.
      enableIndexReplica: false
      # data compression mode for the bucket to run in [off, passive, active]
      compressionMode: "passive"
    users:
      # Name of the bucket
      name: users
      # The type of bucket to use
      type: couchbase
      # The amount of memory that should be allocated to the bucket
      memoryQuota: 128Mi
      # The number of bucket replicates
      replicas: 1
      # The priority when compared to other buckets
      ioPriority: high
      # The bucket eviction policy which determines behavior during expire and high mem usage
      evictionPolicy: fullEviction
      # The bucket's conflict resolution mechanism; which is to be used if a conflict occurs during Cross Data-Center Replication (XDCR). Sequence-based and timestamp-based mechanisms are supported.
      conflictResolution: seqno
      # The enable flush option denotes wether the data in the bucket can be flushed
      enableFlush: true
      # Enable Index replica specifies whether or not to enable view index replicas for this bucket.
      enableIndexReplica: false
      # data compression mode for the bucket to run in [off, passive, active]
      compressionMode: "passive"

  # CouchbaseBackups runs a job which preserves data into backups
  backups: {}
  #
  # Uncomment to create a backup named 'my-backup'
  #
  #   default-backup:
  #     name: my-backup
  #     strategy: full_incremental
  #     full:
  #       schedule: "0 3 * * 0"
  #     incremental:
  #       schedule: "0 3 * * 1-6"
  #     successfulJobsHistoryLimit: 1
  #     failedJobsHistoryLimit: 3
  #     backOffLimit: 2
  #     backupRetention: 24h
  #     logRetention: 24h
  #     size: 5Gi

  # CouchbaseBackupRestore restores data from backups
  backuprestores: {}
  #
  # Uncomment to create a restore named 'my-restore'
  #
  # default-restore:
  #   name: my-restore
  #   backup: my-backup
  #   repo: cb-example-2020-11-12T19_00_03
  #   start:
  #     int: 1
  #     str: oldest
  #   end:
  #     int: 1
  #     str: latest
  #   backOffLimit: 2
  #   logRetention: 24h

  # RBAC users to create
  # (requires couchbase server 6.5.0 and higher)
  users: {}
  #
  # Uncomment to create an example user named 'developer'
  #
  # developer:
  #   # password to use for user authentication
  #   # (alternatively use authSecret)
  #   password: password
  #   # optional secret to use containing user password
  #   authSecret:
  #   # domain of user authentication
  #   authDomain: local
  #   # roles attributed to group
  #   roles:
  #     - name: bucket_admin
  #       bucket: default

  # TLS Certs that will be used to encrypt traffic between operator and couchbase
  tls:
    # enable to auto create certs
    generate: false
    # Expiry time of CA in days for generated certs
    expiration: 365
    # This field defines whether node-to-node encryption is enabled.
    # Must be either 'All' or 'ControlPlaneOnly'.
    # If not specified, data between Couchbase Server nodes is not encrypted.
    nodeToNodeEncryption:

  # syncGateway configuration
  syncGateway:
    # name of the sync gatway pod.
    # defaults to name of chart
    name:
    # how many sync gateway pods to create
    # horizontally scale the deployment
    replicas: 1
    # optional set to change cleanup policy
    revisionHistoryLimit:
    # labels to apply to the deployment resource
    labels: {}
    # labels to apply to the pods
    podLabels: {}
    # resources to apply to the pods
    resources: {}
    # affinity to apply to the pods
    affinity: {}
    # which nodes to run the pods on
    nodeSelector: {}
    # tolerations to apply to the pods
    tolerations: []
    admin:
      # defines if the admin api will be exposed by sync gateway
      enabled: false
    service:
      # additional annotations to add to the Sync Gateway service. useful for setting cloud provider specific annotations controlling the services deployed.
      annotations: {}
      # optionally configure traffic policy for LoadBalancer and NodePort
      externalTrafficPolicy:
    # defines integration with third party monitoring sofware
    monitoring:
      prometheus:
        # defines whether Prometheus metric collection is enabled
        enabled: false
        # image used by the Sync Gateway to perform metric collection
        # (injected as a "sidecar" in each Sync Gateway Pod)
        image:
          repository: couchbasesamples/sync-gateway-prometheus-exporter
          tag: latest
        # pod
        resources:
          {}
          # requests:
          #   cpu: 100m
          # limits:
          #   cpu: 100m
    # database config
    config:
      logging:
        console:
          enabled: true
          log_level: "debug"
          log_keys:
            - "*"
      # databases is a list containing
      # bucket replication configs
      databases:
        db:
          # bucket replicated to sync gateway
          bucket: default
          # guest user config
          users:
            GUEST:
              # disable creation of guest user
              disabled: false
              # channels guest user may access.
              # defaults to all channels
              admin_channels: ["*"]
          # server to connect db to, defaults to cluster server
          server:
          # username of db admin, defaults to cluster admin username
          username:
          # password of db admin, defaults to cluster admin password
          password:
          allow_conflicts: false
          revs_limit: 20
          enable_shared_bucket_access: true
          # optional ca.cert for tls connection
          # (auto-generated when tls.generate true)
          cacert:
    # Type of service to use for exposing Sync Gateway
    # Set as empty string to prevent service creation
    exposeServiceType: ClusterIP
    # image of the sync gateway container
    image:
      repository: couchbase/sync-gateway
      tag: 2.8.0-enterprise
    imagePullPolicy: IfNotPresent
    # Optional secret to use with prepoulated database config
    configSecret:

  # coredns service config to be applied to
  # pods for cross-cluster deployments
  coredns:
    # name kubernete service which exposes nameserver (ie coredns)
    service:
    # search list for host-name lookup
    searches:
      - default.svc.cluster.local
      - svc.cluster.local
      - cluster.local

########### NSQ ###########
nsq:
  enabled: true
  nsqd:
    name: nsqd
    replicaCount: 1
    persistence:
      storageClass: "standard"
      resources:
        requests:
          storage: 1Gi
  nsqlookupd:
    name: nsqlookupd
    replicaCount: 1

########### EFS-PROVISONNER ###########
efs-provisioner:
  enabled: false
  efsProvisioner:
    efsFileSystemId: "<put-fs-id-here>"
    awsRegion: "us-east-1"
    provisionerName: "saferwall.com/aws-efs"

########### NFS SERVER PROVISONNER ###########
nfs-server-provisioner:
  enabled: true

########### NGINX INGRESS  #############
ingress-nginx:
  enabled: false
  controller:
    config:
      use-proxy-protocol: "true"
      use-forwarded-headers: "true"
      compute-full-forwarded-for: "true"
    headers:
      X-GeoIP-Country: "$geoip_country_code"
      X-GeoIP-Region-Name: "$geoip_region_name"
      X-GeoIP-City: "$geoip_city"
      X-GeoIP-Postal-Code: "$geoip_postal_code"
    service:
      externalTrafficPolicy: "Local"
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"

########## CERT-MANAGER ############
cert-manager:
  enabled: true
  ingressShim:
    defaultIssuerName: selfsigned-issuer
    # defaultIssuerName: letsencrypt-prod
    # defaultIssuerName: letsencrypt-staging
    defaultIssuerKind: ClusterIssuer

########## CLUSTER-AUTOSCALER ############
cluster-autoscaler:
  enabled: false
  cloudProvider: aws
  awsRegion: us-east-1
  autoDiscovery:
    clusterName: kops.saferwall.com
########### BACKEND ###########
backend:
  enabled: true
  name: backend
  replicaCount: 1
  containerPort: 8080
  image:
    repository: saferwall/backend
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 500Mi
      cpu: 500m

########### FRONTEND ###########
frontend:
  enabled: true
  name: frontend
  replicaCount: 1
  containerPort: 80
  image:
    repository: saferwall/ui
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  resources:
    requests:
      memory: 50Mi
      cpu: 50m
    limits:
      memory: 100Mi
      cpu: 100m
########### CONSUMER ###########
consumer:
  enabled: true
  name: consumer
  replicaCount: 1
  image:
    repository: saferwall/consumer
    tag: latest
    pullPolicy: Always
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 500Mi
      cpu: 500m
########### WEBSITE ###########
website:
  enabled: false
  name: website
  replicaCount: 1
  containerPort: 4000
  image:
    repository: saferwall/website
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 80
    targetPort: 4000
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 1000Mi
      cpu: 200m
########### MULTIAV ###########
multiav:
  enabled: true
  name: multiav
  vendors:
    avast:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goavast
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    avira:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goavira
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    bitdefender:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gobitdefender
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    clamav:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goclamav
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    comodo:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gocomodo
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    eset:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/goeset
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    drweb:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/godrweb
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    fsecure:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gofsecure
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    kaspersky:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gokaspersky
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    mcafee:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gomcafee
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    sophos:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gosophos
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    symantec:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gosymantec
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    trendmicro:
      enabled: false
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gotrendmicro
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
    windefender:
      enabled: true
      replicaCount: 1
      containerPort: 50051
      image:
        repository: saferwall/gowindefender
        tag: latest
        pullPolicy: Always
      service:
        port: 50051
        targetPort: 50051
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 3Gi
      cpu: 1200m
######### ML PIPILINE #########
ml:
  enabled: false
  name: ml-pipeline
  replicaCount: 1
  containerPort: 8000
  image:
    repository: saferwall/ml-pipeline
    tag: latest
    pullPolicy: Always
  service:
    port: 8000
    targetPort: 8000
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 500Mi
      cpu: 500m
